//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Thu Jul 18 14:51:21 BST 2019
//
//
// Ports:
// Name                         I/O  size props
// wrap64_setBounds               O    94
// wrap64_setBounds_cap           I    93
// wrap64_setBounds_length        I    32
//
// Combinational paths from inputs to outputs:
//   (wrap64_setBounds_cap, wrap64_setBounds_length) -> wrap64_setBounds
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_wrap64_setBounds(wrap64_setBounds_cap,
			       wrap64_setBounds_length,
			       wrap64_setBounds);
  // value method wrap64_setBounds
  input  [92 : 0] wrap64_setBounds_cap;
  input  [31 : 0] wrap64_setBounds_length;
  output [93 : 0] wrap64_setBounds;

  // signals for module outputs
  wire [93 : 0] wrap64_setBounds;

  // remaining internal signals
  wire [33 : 0] base__h65,
		len__h67,
		lmaskLo__h73,
		lmaskLo__h78,
		top__h68,
		x__h4029,
		x__h4202;
  wire [31 : 0] wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d12,
		wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15,
		wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d3,
		wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d6,
		wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d9;
  wire [22 : 0] wrap64_setBounds_length_BIT_31_2_OR_wrap64_set_ETC___d209;
  wire [15 : 0] IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d208;
  wire [8 : 0] x__h4241;
  wire [7 : 0] _theResult___fst_bounds_topBits__h4016,
	       _theResult___fst_bounds_topBits__h4020,
	       a_addrBits__h3912,
	       ret_bounds_baseBits__h4189,
	       ret_bounds_topBits__h4012,
	       x__h4276,
	       x__h4279;
  wire [5 : 0] _25_MINUS_0_CONCAT_IF_wrap64_setBounds_length_B_ETC___d180;
  wire [3 : 0] IF_IF_NOT_wrap64_setBounds_length_BIT_31_2_5_A_ETC___d230;
  wire [2 : 0] repBound__h4269;
  wire IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d217,
       IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d218,
       IF_wrap64_setBounds_length_AND_15_CONCAT_INV_w_ETC___d152,
       IF_wrap64_setBounds_length_AND_15_CONCAT_INV_w_ETC___d220,
       NOT_0_CONCAT_wrap64_setBounds_cap_BITS_89_TO_5_ETC___d189,
       NOT_0_CONCAT_wrap64_setBounds_cap_BITS_89_TO_5_ETC___d198,
       _0_CONCAT_wrap64_setBounds_cap_BITS_89_TO_58_8__ETC___d150,
       wrap64_setBounds_cap_BITS_89_TO_58_8_AND_0_CON_ETC___d146,
       wrap64_setBounds_cap_BITS_89_TO_58_8_AND_0_CON_ETC___d94,
       wrap64_setBounds_length_AND_15_CONCAT_INV_wrap_ETC___d83;

  // value method wrap64_setBounds
  assign wrap64_setBounds =
	     { IF_wrap64_setBounds_length_AND_15_CONCAT_INV_w_ETC___d152,
	       wrap64_setBounds_cap[92:58],
	       a_addrBits__h3912,
	       wrap64_setBounds_cap[49:37],
	       4'd15,
	       wrap64_setBounds_length_BIT_31_2_OR_wrap64_set_ETC___d209,
	       repBound__h4269,
	       IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d217,
	       IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d218,
	       IF_wrap64_setBounds_length_AND_15_CONCAT_INV_w_ETC___d220,
	       IF_IF_NOT_wrap64_setBounds_length_BIT_31_2_5_A_ETC___d230 } ;

  // remaining internal signals
  assign IF_IF_NOT_wrap64_setBounds_length_BIT_31_2_5_A_ETC___d230 =
	     { (IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d217 ==
		IF_wrap64_setBounds_length_AND_15_CONCAT_INV_w_ETC___d220) ?
		 2'd0 :
		 ((IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d217 &&
		   !IF_wrap64_setBounds_length_AND_15_CONCAT_INV_w_ETC___d220) ?
		    2'd1 :
		    2'd3),
	       (IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d218 ==
		IF_wrap64_setBounds_length_AND_15_CONCAT_INV_w_ETC___d220) ?
		 2'd0 :
		 ((IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d218 &&
		   !IF_wrap64_setBounds_length_AND_15_CONCAT_INV_w_ETC___d220) ?
		    2'd1 :
		    2'd3) } ;
  assign IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d208 =
	     (!wrap64_setBounds_length[31] && !wrap64_setBounds_length[30] &&
	      !wrap64_setBounds_length[29] &&
	      !wrap64_setBounds_length[28] &&
	      !wrap64_setBounds_length[27] &&
	      !wrap64_setBounds_length[26] &&
	      !wrap64_setBounds_length[25] &&
	      !wrap64_setBounds_length[24] &&
	      !wrap64_setBounds_length[23] &&
	      !wrap64_setBounds_length[22] &&
	      !wrap64_setBounds_length[21] &&
	      !wrap64_setBounds_length[20] &&
	      !wrap64_setBounds_length[19] &&
	      !wrap64_setBounds_length[18] &&
	      !wrap64_setBounds_length[17] &&
	      !wrap64_setBounds_length[16] &&
	      !wrap64_setBounds_length[15] &&
	      !wrap64_setBounds_length[14] &&
	      !wrap64_setBounds_length[13] &&
	      !wrap64_setBounds_length[12] &&
	      !wrap64_setBounds_length[11] &&
	      !wrap64_setBounds_length[10] &&
	      !wrap64_setBounds_length[9] &&
	      !wrap64_setBounds_length[8] &&
	      !wrap64_setBounds_length[7] &&
	      !wrap64_setBounds_length[6]) ?
	       { _theResult___fst_bounds_topBits__h4020, x__h4029[7:0] } :
	       { ret_bounds_topBits__h4012[7:3],
		 3'd0,
		 ret_bounds_baseBits__h4189 } ;
  assign IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d217 =
	     x__h4279[7:5] < repBound__h4269 ;
  assign IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d218 =
	     x__h4276[7:5] < repBound__h4269 ;
  assign IF_wrap64_setBounds_length_AND_15_CONCAT_INV_w_ETC___d152 =
	     wrap64_setBounds_length_AND_15_CONCAT_INV_wrap_ETC___d83 ?
	       wrap64_setBounds_cap_BITS_89_TO_58_8_AND_0_CON_ETC___d94 :
	       wrap64_setBounds_cap_BITS_89_TO_58_8_AND_0_CON_ETC___d146 &&
	       _0_CONCAT_wrap64_setBounds_cap_BITS_89_TO_58_8__ETC___d150 ;
  assign IF_wrap64_setBounds_length_AND_15_CONCAT_INV_w_ETC___d220 =
	     a_addrBits__h3912[7:5] < repBound__h4269 ;
  assign NOT_0_CONCAT_wrap64_setBounds_cap_BITS_89_TO_5_ETC___d189 =
	     (top__h68 & lmaskLo__h73) != 34'd0 &&
	     (wrap64_setBounds_length[31] || wrap64_setBounds_length[30] ||
	      wrap64_setBounds_length[29] ||
	      wrap64_setBounds_length[28] ||
	      wrap64_setBounds_length[27] ||
	      wrap64_setBounds_length[26] ||
	      wrap64_setBounds_length[25] ||
	      wrap64_setBounds_length[24] ||
	      wrap64_setBounds_length[23] ||
	      wrap64_setBounds_length[22] ||
	      wrap64_setBounds_length[21] ||
	      wrap64_setBounds_length[20] ||
	      wrap64_setBounds_length[19] ||
	      wrap64_setBounds_length[18] ||
	      wrap64_setBounds_length[17] ||
	      wrap64_setBounds_length[16] ||
	      wrap64_setBounds_length[15] ||
	      wrap64_setBounds_length[14] ||
	      wrap64_setBounds_length[13] ||
	      wrap64_setBounds_length[12] ||
	      wrap64_setBounds_length[11] ||
	      wrap64_setBounds_length[10] ||
	      wrap64_setBounds_length[9] ||
	      wrap64_setBounds_length[8] ||
	      wrap64_setBounds_length[7] ||
	      wrap64_setBounds_length[6]) ;
  assign NOT_0_CONCAT_wrap64_setBounds_cap_BITS_89_TO_5_ETC___d198 =
	     (top__h68 & lmaskLo__h78) != 34'd0 &&
	     (wrap64_setBounds_length[31] || wrap64_setBounds_length[30] ||
	      wrap64_setBounds_length[29] ||
	      wrap64_setBounds_length[28] ||
	      wrap64_setBounds_length[27] ||
	      wrap64_setBounds_length[26] ||
	      wrap64_setBounds_length[25] ||
	      wrap64_setBounds_length[24] ||
	      wrap64_setBounds_length[23] ||
	      wrap64_setBounds_length[22] ||
	      wrap64_setBounds_length[21] ||
	      wrap64_setBounds_length[20] ||
	      wrap64_setBounds_length[19] ||
	      wrap64_setBounds_length[18] ||
	      wrap64_setBounds_length[17] ||
	      wrap64_setBounds_length[16] ||
	      wrap64_setBounds_length[15] ||
	      wrap64_setBounds_length[14] ||
	      wrap64_setBounds_length[13] ||
	      wrap64_setBounds_length[12] ||
	      wrap64_setBounds_length[11] ||
	      wrap64_setBounds_length[10] ||
	      wrap64_setBounds_length[9] ||
	      wrap64_setBounds_length[8] ||
	      wrap64_setBounds_length[7] ||
	      wrap64_setBounds_length[6]) ;
  assign _0_CONCAT_wrap64_setBounds_cap_BITS_89_TO_58_8__ETC___d150 =
	     (top__h68 & lmaskLo__h73) == 34'd0 ||
	     !wrap64_setBounds_length[31] && !wrap64_setBounds_length[30] &&
	     !wrap64_setBounds_length[29] &&
	     !wrap64_setBounds_length[28] &&
	     !wrap64_setBounds_length[27] &&
	     !wrap64_setBounds_length[26] &&
	     !wrap64_setBounds_length[25] &&
	     !wrap64_setBounds_length[24] &&
	     !wrap64_setBounds_length[23] &&
	     !wrap64_setBounds_length[22] &&
	     !wrap64_setBounds_length[21] &&
	     !wrap64_setBounds_length[20] &&
	     !wrap64_setBounds_length[19] &&
	     !wrap64_setBounds_length[18] &&
	     !wrap64_setBounds_length[17] &&
	     !wrap64_setBounds_length[16] &&
	     !wrap64_setBounds_length[15] &&
	     !wrap64_setBounds_length[14] &&
	     !wrap64_setBounds_length[13] &&
	     !wrap64_setBounds_length[12] &&
	     !wrap64_setBounds_length[11] &&
	     !wrap64_setBounds_length[10] &&
	     !wrap64_setBounds_length[9] &&
	     !wrap64_setBounds_length[8] &&
	     !wrap64_setBounds_length[7] &&
	     !wrap64_setBounds_length[6] ;
  assign _25_MINUS_0_CONCAT_IF_wrap64_setBounds_length_B_ETC___d180 =
	     6'd25 -
	     { 1'd0,
	       wrap64_setBounds_length[31] ?
		 5'd0 :
		 (wrap64_setBounds_length[30] ?
		    5'd1 :
		    (wrap64_setBounds_length[29] ?
		       5'd2 :
		       (wrap64_setBounds_length[28] ?
			  5'd3 :
			  (wrap64_setBounds_length[27] ?
			     5'd4 :
			     (wrap64_setBounds_length[26] ?
				5'd5 :
				(wrap64_setBounds_length[25] ?
				   5'd6 :
				   (wrap64_setBounds_length[24] ?
				      5'd7 :
				      (wrap64_setBounds_length[23] ?
					 5'd8 :
					 (wrap64_setBounds_length[22] ?
					    5'd9 :
					    (wrap64_setBounds_length[21] ?
					       5'd10 :
					       (wrap64_setBounds_length[20] ?
						  5'd11 :
						  (wrap64_setBounds_length[19] ?
						     5'd12 :
						     (wrap64_setBounds_length[18] ?
							5'd13 :
							(wrap64_setBounds_length[17] ?
							   5'd14 :
							   (wrap64_setBounds_length[16] ?
							      5'd15 :
							      (wrap64_setBounds_length[15] ?
								 5'd16 :
								 (wrap64_setBounds_length[14] ?
								    5'd17 :
								    (wrap64_setBounds_length[13] ?
								       5'd18 :
								       (wrap64_setBounds_length[12] ?
									  5'd19 :
									  (wrap64_setBounds_length[11] ?
									     5'd20 :
									     (wrap64_setBounds_length[10] ?
										5'd21 :
										(wrap64_setBounds_length[9] ?
										   5'd22 :
										   (wrap64_setBounds_length[8] ?
										      5'd23 :
										      (wrap64_setBounds_length[7] ?
											 5'd24 :
											 5'd25)))))))))))))))))))))))) } ;
  assign _theResult___fst_bounds_topBits__h4016 =
	     NOT_0_CONCAT_wrap64_setBounds_cap_BITS_89_TO_5_ETC___d198 ?
	       x__h4202[8:1] + 8'b00001000 :
	       x__h4202[8:1] ;
  assign _theResult___fst_bounds_topBits__h4020 =
	     NOT_0_CONCAT_wrap64_setBounds_cap_BITS_89_TO_5_ETC___d189 ?
	       x__h4241[7:0] :
	       x__h4202[7:0] ;
  assign a_addrBits__h3912 =
	     wrap64_setBounds_length_AND_15_CONCAT_INV_wrap_ETC___d83 ?
	       x__h4029[8:1] :
	       x__h4029[7:0] ;
  assign base__h65 = { 2'd0, wrap64_setBounds_cap[89:58] } ;
  assign len__h67 = { 2'd0, wrap64_setBounds_length } ;
  assign lmaskLo__h73 =
	     { 6'd0,
	       wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15[31:4] } ;
  assign lmaskLo__h78 =
	     { 5'd0,
	       wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15[31:3] } ;
  assign repBound__h4269 = x__h4276[7:5] - 3'b001 ;
  assign ret_bounds_baseBits__h4189 = { a_addrBits__h3912[7:3], 3'd0 } ;
  assign ret_bounds_topBits__h4012 =
	     wrap64_setBounds_length_AND_15_CONCAT_INV_wrap_ETC___d83 ?
	       _theResult___fst_bounds_topBits__h4016 :
	       _theResult___fst_bounds_topBits__h4020 ;
  assign top__h68 = base__h65 + len__h67 ;
  assign wrap64_setBounds_cap_BITS_89_TO_58_8_AND_0_CON_ETC___d146 =
	     (wrap64_setBounds_cap[89:58] &
	      { 4'd0,
		wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15[31:4] }) ==
	     32'd0 ||
	     !wrap64_setBounds_length[31] && !wrap64_setBounds_length[30] &&
	     !wrap64_setBounds_length[29] &&
	     !wrap64_setBounds_length[28] &&
	     !wrap64_setBounds_length[27] &&
	     !wrap64_setBounds_length[26] &&
	     !wrap64_setBounds_length[25] &&
	     !wrap64_setBounds_length[24] &&
	     !wrap64_setBounds_length[23] &&
	     !wrap64_setBounds_length[22] &&
	     !wrap64_setBounds_length[21] &&
	     !wrap64_setBounds_length[20] &&
	     !wrap64_setBounds_length[19] &&
	     !wrap64_setBounds_length[18] &&
	     !wrap64_setBounds_length[17] &&
	     !wrap64_setBounds_length[16] &&
	     !wrap64_setBounds_length[15] &&
	     !wrap64_setBounds_length[14] &&
	     !wrap64_setBounds_length[13] &&
	     !wrap64_setBounds_length[12] &&
	     !wrap64_setBounds_length[11] &&
	     !wrap64_setBounds_length[10] &&
	     !wrap64_setBounds_length[9] &&
	     !wrap64_setBounds_length[8] &&
	     !wrap64_setBounds_length[7] &&
	     !wrap64_setBounds_length[6] ;
  assign wrap64_setBounds_cap_BITS_89_TO_58_8_AND_0_CON_ETC___d94 =
	     (wrap64_setBounds_cap[89:58] &
	      { 3'd0,
		wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15[31:3] }) ==
	     32'd0 &&
	     (top__h68 & lmaskLo__h78) == 34'd0 ;
  assign wrap64_setBounds_length_AND_15_CONCAT_INV_wrap_ETC___d83 =
	     (wrap64_setBounds_length &
	      { 4'd15,
		~wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15[31:4] }) ==
	     (wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15 &
	      { 4'd15,
		~wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15[31:4] }) &&
	     (wrap64_setBounds_length[31] || wrap64_setBounds_length[30] ||
	      wrap64_setBounds_length[29] ||
	      wrap64_setBounds_length[28] ||
	      wrap64_setBounds_length[27] ||
	      wrap64_setBounds_length[26] ||
	      wrap64_setBounds_length[25] ||
	      wrap64_setBounds_length[24] ||
	      wrap64_setBounds_length[23] ||
	      wrap64_setBounds_length[22] ||
	      wrap64_setBounds_length[21] ||
	      wrap64_setBounds_length[20] ||
	      wrap64_setBounds_length[19] ||
	      wrap64_setBounds_length[18] ||
	      wrap64_setBounds_length[17] ||
	      wrap64_setBounds_length[16] ||
	      wrap64_setBounds_length[15] ||
	      wrap64_setBounds_length[14] ||
	      wrap64_setBounds_length[13] ||
	      wrap64_setBounds_length[12] ||
	      wrap64_setBounds_length[11] ||
	      wrap64_setBounds_length[10] ||
	      wrap64_setBounds_length[9] ||
	      wrap64_setBounds_length[8] ||
	      wrap64_setBounds_length[7] ||
	      wrap64_setBounds_length[6]) &&
	     ((wrap64_setBounds_length &
	       { 4'd0,
		 wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15[31:4] }) !=
	      32'd0 ||
	      (wrap64_setBounds_cap[89:58] &
	       { 4'd0,
		 wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15[31:4] }) !=
	      32'd0) ;
  assign wrap64_setBounds_length_BIT_31_2_OR_wrap64_set_ETC___d209 =
	     { wrap64_setBounds_length[31] || wrap64_setBounds_length[30] ||
	       wrap64_setBounds_length[29] ||
	       wrap64_setBounds_length[28] ||
	       wrap64_setBounds_length[27] ||
	       wrap64_setBounds_length[26] ||
	       wrap64_setBounds_length[25] ||
	       wrap64_setBounds_length[24] ||
	       wrap64_setBounds_length[23] ||
	       wrap64_setBounds_length[22] ||
	       wrap64_setBounds_length[21] ||
	       wrap64_setBounds_length[20] ||
	       wrap64_setBounds_length[19] ||
	       wrap64_setBounds_length[18] ||
	       wrap64_setBounds_length[17] ||
	       wrap64_setBounds_length[16] ||
	       wrap64_setBounds_length[15] ||
	       wrap64_setBounds_length[14] ||
	       wrap64_setBounds_length[13] ||
	       wrap64_setBounds_length[12] ||
	       wrap64_setBounds_length[11] ||
	       wrap64_setBounds_length[10] ||
	       wrap64_setBounds_length[9] ||
	       wrap64_setBounds_length[8] ||
	       wrap64_setBounds_length[7] ||
	       wrap64_setBounds_length[6],
	       wrap64_setBounds_length_AND_15_CONCAT_INV_wrap_ETC___d83 ?
		 _25_MINUS_0_CONCAT_IF_wrap64_setBounds_length_B_ETC___d180 +
		 6'd1 :
		 _25_MINUS_0_CONCAT_IF_wrap64_setBounds_length_B_ETC___d180,
	       IF_NOT_wrap64_setBounds_length_BIT_31_2_5_AND__ETC___d208 } ;
  assign wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d12 =
	     wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d9 |
	     { 8'd0,
	       wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d9[31:8] } ;
  assign wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d15 =
	     wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d12 |
	     { 16'd0,
	       wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d12[31:16] } ;
  assign wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d3 =
	     wrap64_setBounds_length |
	     { 1'd0, wrap64_setBounds_length[31:1] } ;
  assign wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d6 =
	     wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d3 |
	     { 2'd0,
	       wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d3[31:2] } ;
  assign wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d9 =
	     wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d6 |
	     { 4'd0,
	       wrap64_setBounds_length_OR_0_CONCAT_wrap64_set_ETC___d6[31:4] } ;
  assign x__h4029 =
	     base__h65 >>
	     _25_MINUS_0_CONCAT_IF_wrap64_setBounds_length_B_ETC___d180 ;
  assign x__h4202 =
	     top__h68 >>
	     _25_MINUS_0_CONCAT_IF_wrap64_setBounds_length_B_ETC___d180 ;
  assign x__h4241 = x__h4202[8:0] + 9'b000001000 ;
  assign x__h4276 =
	     (!wrap64_setBounds_length[31] && !wrap64_setBounds_length[30] &&
	      !wrap64_setBounds_length[29] &&
	      !wrap64_setBounds_length[28] &&
	      !wrap64_setBounds_length[27] &&
	      !wrap64_setBounds_length[26] &&
	      !wrap64_setBounds_length[25] &&
	      !wrap64_setBounds_length[24] &&
	      !wrap64_setBounds_length[23] &&
	      !wrap64_setBounds_length[22] &&
	      !wrap64_setBounds_length[21] &&
	      !wrap64_setBounds_length[20] &&
	      !wrap64_setBounds_length[19] &&
	      !wrap64_setBounds_length[18] &&
	      !wrap64_setBounds_length[17] &&
	      !wrap64_setBounds_length[16] &&
	      !wrap64_setBounds_length[15] &&
	      !wrap64_setBounds_length[14] &&
	      !wrap64_setBounds_length[13] &&
	      !wrap64_setBounds_length[12] &&
	      !wrap64_setBounds_length[11] &&
	      !wrap64_setBounds_length[10] &&
	      !wrap64_setBounds_length[9] &&
	      !wrap64_setBounds_length[8] &&
	      !wrap64_setBounds_length[7] &&
	      !wrap64_setBounds_length[6]) ?
	       a_addrBits__h3912 :
	       ret_bounds_baseBits__h4189 ;
  assign x__h4279 =
	     (!wrap64_setBounds_length[31] && !wrap64_setBounds_length[30] &&
	      !wrap64_setBounds_length[29] &&
	      !wrap64_setBounds_length[28] &&
	      !wrap64_setBounds_length[27] &&
	      !wrap64_setBounds_length[26] &&
	      !wrap64_setBounds_length[25] &&
	      !wrap64_setBounds_length[24] &&
	      !wrap64_setBounds_length[23] &&
	      !wrap64_setBounds_length[22] &&
	      !wrap64_setBounds_length[21] &&
	      !wrap64_setBounds_length[20] &&
	      !wrap64_setBounds_length[19] &&
	      !wrap64_setBounds_length[18] &&
	      !wrap64_setBounds_length[17] &&
	      !wrap64_setBounds_length[16] &&
	      !wrap64_setBounds_length[15] &&
	      !wrap64_setBounds_length[14] &&
	      !wrap64_setBounds_length[13] &&
	      !wrap64_setBounds_length[12] &&
	      !wrap64_setBounds_length[11] &&
	      !wrap64_setBounds_length[10] &&
	      !wrap64_setBounds_length[9] &&
	      !wrap64_setBounds_length[8] &&
	      !wrap64_setBounds_length[7] &&
	      !wrap64_setBounds_length[6]) ?
	       ret_bounds_topBits__h4012 :
	       { ret_bounds_topBits__h4012[7:3], 3'd0 } ;
endmodule  // module_wrap64_setBounds

